{"version":3,"sources":["../src/index.js"],"names":["doneLoading","authStateChanged","reduxFireAuthReducer","init","DONE_LOADING","AUTH_STATE_CHANGED","user","type","hasAuth","toJSON","initialState","isLoading","state","action","Object","assign","store","authInstance","reducerKey","onAuthStateChanged","getState","dispatch"],"mappings":";;;;;;;;;;;;;;;;;;YAOgBA,W,GAAAA,W;YAYAC,gB,GAAAA,gB;YAmBAC,oB,GAAAA,oB;YA0BAC,I,GAAAA,I;AAhET,QAAMC,sCAAe,gCAArB;AACA,QAAMC,kDAAqB,sCAA3B;;AAEP;;;;AAIO,aAASL,WAAT,CAAqBM,IAArB,EAA2B;AAC9B,eAAO;AACHC,kBAAMH,YADH;AAEHI,qBAAS,CAAC,CAACF,IAFR;AAGHA,kBAAMA,QAAQA,KAAKG,MAAL;AAHX,SAAP;AAKH;;AAED;;;;AAIO,aAASR,gBAAT,CAA0BK,IAA1B,EAAgC;AACnC,eAAO;AACHC,kBAAMF,kBADH;AAEHG,qBAAS,CAAC,CAACF,IAFR;AAGHA,kBAAMA,QAAQA,KAAKG,MAAL;AAHX,SAAP;AAKH;;AAEM,QAAMC,sCAAe;AACxBC,mBAAW,IADa;AAExBH,iBAAS,KAFe;AAGxBF,cAAM;AAHkB,KAArB;;AAMP;;;;;AAKO,aAASJ,oBAAT,GAA4D;AAAA,YAA9BU,KAA8B,uEAAtBF,YAAsB;AAAA,YAARG,MAAQ;;AAC/D,gBAAQA,OAAON,IAAf;AACI,iBAAKH,YAAL;AACI,uBAAOU,OAAOC,MAAP,CAAc,EAAd,EAAkBH,KAAlB,EAAyB;AAC5BD,+BAAW,KADiB;AAE5BH,6BAASK,OAAOL,OAFY;AAG5BF,0BAAMO,OAAOP;AAHe,iBAAzB,CAAP;;AAMJ,iBAAKD,kBAAL;AACI,uBAAOS,OAAOC,MAAP,CAAc,EAAd,EAAkBH,KAAlB,EAAyB;AAC5BJ,6BAASK,OAAOL,OADY;AAE5BF,0BAAMO,OAAOP;AAFe,iBAAzB,CAAP;;AAKJ;AACI,uBAAOM,KAAP;AAfR;AAiBH;;AAED;;;;;;AAMO,aAAST,IAAT,CAAca,KAAd,EAAqBC,YAArB,EAA4D;AAAA,YAAzBC,UAAyB,uEAAZ,UAAY;;AAC/DD,qBAAaE,kBAAb,CAAgC,UAACb,IAAD,EAAU;AACtC,gBAAIU,MAAMI,QAAN,GAAiBF,UAAjB,EAA6BP,SAAjC,EAA4C;AACxCK,sBAAMK,QAAN,CAAerB,YAAYM,IAAZ,CAAf;AACH,aAFD,MAEO;AACHU,sBAAMK,QAAN,CAAepB,iBAAiBK,IAAjB,CAAf;AACH;AACJ,SAND;AAOH","file":"index.js","sourcesContent":["export const DONE_LOADING = '@REDUX_FIRE_AUTH__DONE_LOADING';\nexport const AUTH_STATE_CHANGED = '@REDUX_FIRE_AUTH__AUTH_STATE_CHANGED';\n\n/**\n *\n * @param {user | null} user The user object\n */\nexport function doneLoading(user) {\n    return {\n        type: DONE_LOADING,\n        hasAuth: !!user,\n        user: user && user.toJSON(),\n    };\n}\n\n/**\n *\n * @param {user | null} user The user object\n */\nexport function authStateChanged(user) {\n    return {\n        type: AUTH_STATE_CHANGED,\n        hasAuth: !!user,\n        user: user && user.toJSON(),\n    };\n}\n\nexport const initialState = {\n    isLoading: true,\n    hasAuth: false,\n    user: null,\n};\n\n/**\n *\n * @param {object} state the redux state\n * @param {action} action the redux action\n */\nexport function reduxFireAuthReducer(state = initialState, action) {\n    switch (action.type) {\n        case DONE_LOADING:\n            return Object.assign({}, state, {\n                isLoading: false,\n                hasAuth: action.hasAuth,\n                user: action.user,\n            });\n\n        case AUTH_STATE_CHANGED:\n            return Object.assign({}, state, {\n                hasAuth: action.hasAuth,\n                user: action.user,\n            });\n\n        default:\n            return state;\n    }\n}\n\n/**\n *\n * @param {store} store The redux store,\n * @param {authInstance} authInstance Firebase Auth instance, NOT THE CONSTRUCTOR!!\n * @param {string?} reducerKey The key in witch the reducer was bound with combine reducers.\n */\nexport function init(store, authInstance, reducerKey = 'fireAuth') {\n    authInstance.onAuthStateChanged((user) => {\n        if (store.getState()[reducerKey].isLoading) {\n            store.dispatch(doneLoading(user));\n        } else {\n            store.dispatch(authStateChanged(user));\n        }\n    });\n}\n"]}